/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { Canvas, useFrame, ThreeElements } from '@react-three/fiber'
import { GLTF } from 'three-stdlib'

export type DreiGLTF = GLTF & {
  nodes: Record<string, THREE.Mesh>;
  materials: Record<string, THREE.MeshStandardMaterial>;
};

export function Chicken(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF("/models/chicken.glb") as DreiGLTF
  return (
    <group {...props} dispose={null}>
      <group scale={0.02}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Cube035_Cube034-Mesh"].geometry}
          material={materials.FF9800}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Cube035_Cube034-Mesh_1"].geometry}
          material={materials.FFFFFF}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Cube035_Cube034-Mesh_2"].geometry}
          material={materials["1A1A1A"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Cube035_Cube034-Mesh_3"].geometry}
          material={materials.F44336}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Cube035_Cube034-Mesh_4"].geometry}
          material={materials["455A64"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/chicken.glb");
